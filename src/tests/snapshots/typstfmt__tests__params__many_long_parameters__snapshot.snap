---
source: src/tests/params.rs
description: "INPUT\n===\n\"#let title-slide(extra: none, ..args) = touying-slide-wrapper(self => {\\n  let info = self.info + args.named()\\n  let body = {\\n    set text(fill: self.colors.neutral-darkest)\\n    set align(horizon)\\n    block(width: 100%, inset: 2em, {\\n      let logo = pad(right: 0.5cm, scale(200%, info.logo))\\n      components.left-and-right({\\n        text(size: 1.3em, text(weight: \\\"medium\\\", info.title))\\n        if info.subtitle != none {\\n          linebreak()\\n          text(size: 0.9em, info.subtitle)\\n        }\\n      }, text(2em, utils.call-or-display(self, logo)))\\n      line(length: 100%, stroke: .05em + self.colors.primary-light)\\n      set text(size: .8em)\\n      if info.author != none {\\n        block(spacing: 1em, info.author)\\n      }\\n      if info.date != none {\\n        block(spacing: 1em, utils.display-info-date(self))\\n      }\\n      set text(size: .8em)\\n      if info.institution != none {\\n        block(spacing: 1em, info.institution)\\n      }\\n      if extra != none {\\n        block(spacing: 1em, extra)\\n      }\\n    })\\n  }\\n  self = utils.merge-dicts(\\n    self,\\n    config-common(freeze-slide-counter: true),\\n    config-page(fill: self.colors.neutral-lightest),\\n  )\\n  touying-slide(self: self, body)\\n})\"\n===\n#let title-slide(extra: none, ..args) = touying-slide-wrapper(self => {\n  let info = self.info + args.named()\n  let body = {\n    set text(fill: self.colors.neutral-darkest)\n    set align(horizon)\n    block(width: 100%, inset: 2em, {\n      let logo = pad(right: 0.5cm, scale(200%, info.logo))\n      components.left-and-right({\n        text(size: 1.3em, text(weight: \"medium\", info.title))\n        if info.subtitle != none {\n          linebreak()\n          text(size: 0.9em, info.subtitle)\n        }\n      }, text(2em, utils.call-or-display(self, logo)))\n      line(length: 100%, stroke: .05em + self.colors.primary-light)\n      set text(size: .8em)\n      if info.author != none {\n        block(spacing: 1em, info.author)\n      }\n      if info.date != none {\n        block(spacing: 1em, utils.display-info-date(self))\n      }\n      set text(size: .8em)\n      if info.institution != none {\n        block(spacing: 1em, info.institution)\n      }\n      if extra != none {\n        block(spacing: 1em, extra)\n      }\n    })\n  }\n  self = utils.merge-dicts(\n    self,\n    config-common(freeze-slide-counter: true),\n    config-page(fill: self.colors.neutral-lightest),\n  )\n  touying-slide(self: self, body)\n})\n===\nFORMATTED\n===\n#let title-slide(extra: none, ..args) = touying-slide-wrapper(self => {\n  let info = self.info + args.named()\n  let body = {\n    set text(fill: self.colors.neutral-darkest)\n    set align(horizon)\n    block(width: 100%, inset: 2em, {\n      let logo = pad(right: 0.5cm, scale(200%, info.logo))\n      components.left-and-right({\n        text(size: 1.3em, text(weight: \"medium\", info.title))\n        if info.subtitle != none {\n          linebreak()\n          text(size: 0.9em, info.subtitle)\n        }\n      }, text(2em, utils.call-or-display(self, logo)))\n      line(length: 100%, stroke: .05em + self.colors.primary-light)\n      set text(size: .8em)\n      if info.author != none {\n        block(spacing: 1em, info.author)\n      }\n      if info.date != none {\n        block(spacing: 1em, utils.display-info-date(self))\n      }\n      set text(size: .8em)\n      if info.institution != none {\n        block(spacing: 1em, info.institution)\n      }\n      if extra != none {\n        block(spacing: 1em, extra)\n      }\n    })\n  }\n  self = utils.merge-dicts(\n    self,\n    config-common(freeze-slide-counter: true),\n    config-page(fill: self.colors.neutral-lightest),\n  )\n  touying-slide(self: self, body)\n})"
expression: formatted
---
"#let title-slide(extra: none, ..args) = touying-slide-wrapper(self => {\n  let info = self.info + args.named()\n  let body = {\n    set text(fill: self.colors.neutral-darkest)\n    set align(horizon)\n    block(width: 100%, inset: 2em, {\n      let logo = pad(right: 0.5cm, scale(200%, info.logo))\n      components.left-and-right({\n        text(size: 1.3em, text(weight: \"medium\", info.title))\n        if info.subtitle != none {\n          linebreak()\n          text(size: 0.9em, info.subtitle)\n        }\n      }, text(2em, utils.call-or-display(self, logo)))\n      line(length: 100%, stroke: .05em + self.colors.primary-light)\n      set text(size: .8em)\n      if info.author != none {\n        block(spacing: 1em, info.author)\n      }\n      if info.date != none {\n        block(spacing: 1em, utils.display-info-date(self))\n      }\n      set text(size: .8em)\n      if info.institution != none {\n        block(spacing: 1em, info.institution)\n      }\n      if extra != none {\n        block(spacing: 1em, extra)\n      }\n    })\n  }\n  self = utils.merge-dicts(\n    self,\n    config-common(freeze-slide-counter: true),\n    config-page(fill: self.colors.neutral-lightest),\n  )\n  touying-slide(self: self, body)\n})"
